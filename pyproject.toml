[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "abdes1"
description = "Actor Based Discrete Event Simulation 1"
dynamic = ["version"]
authors = [{ name = 'Peter Bruinsma', email = 'peter@23min.com' }]
readme = "README.md"
license = { text = 'MIT' }
requires-python = ">=3.8"
dependencies = []
classifiers = [
    "Development Status :: 1 - Planning",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: Implementation :: CPython",
]
keywords = ["actor system", "simulation", "discrete event simulator", "DES"]

# [project.urls]
# Documentation = 'https://'
# Code = 'https://'
# Tracker = 'https://'

[project.optional-dependencies]
dev = [
    "coverage[toml] >=6.4.4",
    "flake8-pyproject >=1.1.0",
    "mypy >=1.3.0",
    "pylint >=2.12.2",
    "pytest >=7.0.0",
    "pytest-asyncio >=0.15.0",
    "pytest-cov >=3.0.0",
    "pytest-mock >=3.7.0",
    "pytest-timeout >=2.1.0",
    "types-paramiko >=2.8.13",
    "types-python-dateutil >=2.8.9",
    "types-PyYAML <6.0.0,>=5.3.0",
    "types-requests >=2.27.0",
    "wheel>=0.37.0",
    "prompt_toolkit",
    "matplotlib",
    "ipykernel",
]
ci = []
docs = []

[tool.setuptools.packages.find]
include = ["abdes1*", "examples*"]
exclude = ["tests"]

[tool.pylint.master]
ignore = [".env", ".venv", ".pytest_tmp"]
jobs = 1
disable = "all"
enable = [
    'F',
    'unreachable',
    'duplicate-key',
    'unnecessary-semicolon',
    'global-variable-not-assigned',
    'unused-variable',
    'unused-wildcard-import',
    'unused-import',
    # 'line-too-long',
    'binary-op-exception',
    'bad-format-string',
    'anomalous-backslash-in-string',
    'bad-open-mode',
    'E0001',
    'E0011',
    'E0012',
    'E0100',
    'E0101',
    'E0102',
    'E0103',
    'E0104',
    'E0105',
    'E0107',
    'E0108',
    'E0110',
    'E0111',
    'E0112',
    'E0113',
    'E0114',
    'E0115',
    'E0116',
    'E0117',
    'E0118',
    'E0202',
    'E0203',
    'E0211',
    'E0213',
    'E0236',
    'E0237',
    'E0238',
    'E0239',
    'E0240',
    'E0241',
    'E0301',
    'E0302',
    'E0303',
    'E0401',
    'E0402',
    'E0601',
    'E0602',
    'E0603',
    'E0604',
    'E0611',
    'E0632',
    'E0633',
    'E0701',
    'E0702',
    'E0703',
    'E0704',
    'E0710',
    'E0711',
    'E0712',
    'E1003',
    'E1101',
    'E1102',
    'E1111',
    'E1120',
    'E1121',
    'E1123',
    'E1124',
    'E1125',
    'E1126',
    'E1127',
    'E1128',
    'E1129',
    'E1130',
    'E1131',
    'E1132',
    'E1133',
    'E1134',
    'E1135',
    'E1136',
    'E1137',
    'E1138',
    'E1139',
    'E1200',
    'E1201',
    'E1205',
    'E1206',
    'E1300',
    'E1301',
    'E1302',
    'E1303',
    'E1304',
    'E1305',
    'E1306',
    'E1310',
    'E1700',
    'E1701',
]
max-line-length = 180
msg-template = "{path}:{line}:{column},{category},{symbol}:{msg}"
reports = "no"
output-format = "text"
generated-members = ["REQ", "LINGER", "REP", "ROUTER", "NOBLOCK", "IDENTITY"]

[tool.black]
line-length = 180
target-version = ['py310']
include = '\.pyi?$'

[tool.flake8]
max-line-length = 180
ignore = ["E722", "W503", "E402", "F405", "F403"]
exclude = [".git", "__pycache__", "docs", "build", "dist", ".pytest_tmp"]

[tool.mypy]
# https://github.com/python/mypy/issues/5870
#follow_missing_imports = true
show_column_numbers = true
check_untyped_defs = true
disallow_untyped_defs = true
#disallow_incomplete_defs = true
#disallow_any_generics = true
#disallow_subclassing_any = true
#disallow_untyped_calls = true
disallow_incomplete_defs = true
#disallow_untyped_decorators = true
no_implicit_optional = true
no_implicit_reexport = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
# module = "abdes1.*"
# no_implicit_reexport = false

# Allow imports from 3rd party libraries that are not typed
[[tool.mypy.overrides]]
# module = "3rdpartylib.*"
# ignore_missing_imports = true

# Pylance
[tool.pyright]
include = ["abdes1", "examples"]
exclude = [
    "docs",
    "tests",
    ".pytest_tmp",
    ".venv",
    ".env",
    "build",
    "dist",
    "examples/.venv",
    "examples/.env",
]
strict = ["abdes1"]
typeCheckingMode = "strict"
reportMissingImports = "information"
reportMissingTypeStubs = "information"
reportUnknownMemberType = "information"
extraPaths = ["abdes1", "examples"]

[tool.coverage.run]
omit = ["tests/*", "setup.py", ".pytest_tmp/*"]

[tool.pytest.ini_options]
addopts = ["--cov=.", "--cov-report=", "--no-cov-on-fail"]
timeout = 10
filterwarnings = []
asyncio_mode = "auto"
